                          Youtube search view is youtube autocomplete textview

Method: 

    public String getTitle(){return Title;}
    public String getDescription(){ return Description;}
    public String getThumbnailUrl(){return ThumbnailUrl;}
    public String getVideoId(){return VideoId;}
    public String getYoutube_link(){return Youtube_link;}
    
    public String tostring() retunrn :
       Title
       Description
       ThumbnailUrl
       VideoId
       Youtube Link

<a href="">
  <img src="http://228-playlist.livehost.fr/Youtube%20Search%20View/ysv1.png" alt="" style="width:42px;height:42px;border:0;">
</a>

For Use :

1-) GRABLE FILE

Add to your application grable file : 

 -  compile 'com.google.apis:google-api-services-youtube:v3-rev176-1.22.0'
    compile 'com.google.api-client:google-api-client:1.19.1'
    compile 'com.google.oauth-client:google-oauth-client:1.8.0-beta'
    compile 'com.google.http-client:google-http-client-gson:1.19.0'
    compile 'com.google.code.findbugs:jsr305:2.0.1'
    compile 'com.google.http-client:google-http-client-jackson2:1.22.0'
    compile 'com.fasterxml.jackson.core:jackson-core:2.8.1'
    compile 'com.google.api-client:google-api-client-android:1.22.0'
    compile 'com.google.http-client:google-http-client-android:1.22.0'

    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    compile 'com.mikhaellopez:circularimageview:3.0.2'
    compile 'org.apache.httpcomponents:httpclient:4.0.1'


    configurations {
        compile.exclude group: "org.apache.httpcomponents", module: "httpclient"
    }
    
    
 2-) DOWNLOAD YOUTUBE SEARCH VIEW AAR LIBRARY
 
   * import file to your application
   
 3-) HOW TO USE :
 
   * IN XML FILE : 
   
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/activity_main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context="fr.dev.koff.testysv.MainActivity">

    <fr.dev.koff.youtubesearchview.YoutubeSearchView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/searchView"
        android:width="@dimen/abc_action_bar_content_inset_material"
        android:layout_alignParentTop="true"
        android:layout_alignParentLeft="true"
        android:layout_alignParentStart="true"
        android:layout_alignParentRight="true"
        android:layout_alignParentEnd="true"
        android:textStyle="bold|normal|italic"
        android:textColor="@color/abc_btn_colored_borderless_text_material"
        android:hint="search on Youtube"
        />
</RelativeLayout>


  *IN JAVA ACTIVITY FILE
  
  YoutubeSearchView youtubeSearchView;
  
  youtubeSearchView = (YoutubeSearchView)findViewById(R.id.searchView);

        youtubeSearchView.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {

            }

            @Override
            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
            
                youtubeSearchView.LoadSearchresult(charSequence.toString(),
                        "YOUR YOUTUBE APIKEY");
            }

            @Override
            public void afterTextChanged(Editable editable) {

            }
        });

// ON search item click listner
        youtubeSearchView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                youtubeSearchView.setText(youtubeSearchView.getYoutube_link());
            }
        });
    }
